[{"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\index.js":"1","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\App.js":"2","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\context\\index.js":"3","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Main.js":"4","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\AddNewBook.js":"5","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Categories.js":"6","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Calendar.js":"7","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\User.js":"8","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Books.js":"9","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Sidebar.js":"10","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\EditBooks.js":"11","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Modal.js":"12","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\BookForm.js":"13","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Category.js":"14","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\AddNewCategory.js":"15","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Book.js":"16","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\hooks\\index.js":"17","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\firebase\\index.js":"18","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\constants\\index.js":"19","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\RenameCategory.js":"20","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\CategoryForm.js":"21","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Last7Days.js":"22","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\SearchBar.js":"23"},{"size":340,"mtime":1635789411451,"results":"24","hashOfConfig":"25"},{"size":736,"mtime":1637326545487,"results":"26","hashOfConfig":"25"},{"size":1178,"mtime":1636920131471,"results":"27","hashOfConfig":"25"},{"size":333,"mtime":1637143529795,"results":"28","hashOfConfig":"25"},{"size":3141,"mtime":1636920131451,"results":"29","hashOfConfig":"25"},{"size":1693,"mtime":1635789411417,"results":"30","hashOfConfig":"25"},{"size":1187,"mtime":1635789411417,"results":"31","hashOfConfig":"25"},{"size":426,"mtime":1635789411425,"results":"32","hashOfConfig":"25"},{"size":1241,"mtime":1637326606717,"results":"33","hashOfConfig":"25"},{"size":952,"mtime":1636920131468,"results":"34","hashOfConfig":"25"},{"size":2250,"mtime":1636920131463,"results":"35","hashOfConfig":"25"},{"size":475,"mtime":1635789411422,"results":"36","hashOfConfig":"25"},{"size":3843,"mtime":1636920131458,"results":"37","hashOfConfig":"25"},{"size":2826,"mtime":1636920131461,"results":"38","hashOfConfig":"25"},{"size":1833,"mtime":1636920131454,"results":"39","hashOfConfig":"25"},{"size":3171,"mtime":1636920131457,"results":"40","hashOfConfig":"25"},{"size":3135,"mtime":1636920131473,"results":"41","hashOfConfig":"25"},{"size":513,"mtime":1635789411429,"results":"42","hashOfConfig":"25"},{"size":76,"mtime":1636920131469,"results":"43","hashOfConfig":"25"},{"size":2741,"mtime":1636920131465,"results":"44","hashOfConfig":"25"},{"size":776,"mtime":1635789411419,"results":"45","hashOfConfig":"25"},{"size":1784,"mtime":1636920131735,"results":"46","hashOfConfig":"25"},{"size":448,"mtime":1637326408865,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"saosuc",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\index.js",[],["106","107"],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\App.js",["108"],"import './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport Main from './components/Main';\r\nimport User from './components/User';\r\nimport AddNewBook from './components/AddNewBook';\r\nimport Calendar from './components/Calendar';\r\nimport Categories from './components/Categories';\r\nimport Books from './components/Books';\r\nimport EditBooks from './components/EditBooks';\r\nimport Search  from './components/SearchBar';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Sidebar>\r\n        <User />\r\n        <AddNewBook />\r\n        <Calendar />\r\n        <Categories />\r\n\r\n     </Sidebar>\r\n     \r\n     <Main>\r\n      <Books />\r\n      <EditBooks />\r\n\r\n     </Main>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\context\\index.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Main.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\AddNewBook.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Categories.js",["109","110","111"],"import React, { useContext, useState } from 'react'\r\nimport { CaretUp, Journal, Journals, Palette, PencilFill } from 'react-bootstrap-icons';\r\nimport { BookContext } from '../context';\r\nimport AddNewCategory from './AddNewCategory'\r\nimport Category from './Category'\r\n\r\nfunction Categories() {\r\n    const [showMenu, setShowMenu] = useState(true);\r\n    const [edit, setEdit] = useState(false);\r\n    const pencilColor = edit ? \"#1ec94c\" : \"#000000\"\r\n\r\n    const { categories } = useContext(BookContext)\r\n\r\n\r\n    return (\r\n        <div className='Categories'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <Journals size=\"18\" />\r\n                    <p>Categories</p>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    {\r\n                        showMenu && categories.length > 0 &&\r\n                        <span className=\"edit\" onClick={() => setEdit(edit => !edit)}>\r\n                            <PencilFill size=\"15\" color={pencilColor} />\r\n                        </span>\r\n                    }\r\n                    <AddNewCategory />\r\n                    <span>\r\n                        <CaretUp size=\"20\" />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className=\"item\">\r\n                {\r\n                    categories.map(category =>\r\n                        <Category\r\n                            category={category}\r\n                            key={category.id}\r\n                            edit={edit}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Calendar.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\User.js",["112"],"import React from 'react'\r\nimport logo from '../img/user.png'\r\nfunction User(){\r\n    \r\n    return (\r\n        <div className='User'>\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"logo\" />\r\n                <div className=\"info\">\r\n                    <p>Marek</p>\r\n                    <a href=\"#\">Logout!</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Books.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Sidebar.js",["113"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { BookContext } from '../context'\r\n\r\nfunction Sidebar({ children }){\r\n    const [isActive, setActive] = useState(\"false\")\r\n\r\n    const {setSelectedBook} = useContext(BookContext)\r\n    const sidebarRef = useRef()\r\n\r\nuseEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n\r\n    return () => document.removeEventListener('click', handleClick)\r\n})\r\n\r\nconst handleClick = e => {\r\n    if(e.target == sidebarRef.current || sidebarRef.current.contains(e.target)){\r\n        setSelectedBook(undefined)\r\n    }\r\n}\r\n\r\nconst toogleVisibility= () =>{\r\n    setActive(!isActive)\r\n}\r\n\r\nreturn (\r\n        <div className={`Sidebar ${!isActive ? 'visible' : '' }`}\r\n        ref={sidebarRef}\r\n        >\r\n            <button className={`showHide ${!isActive ? 'open' : ''}`} onClick={toogleVisibility}/>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\EditBooks.js",["114"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport BookForm from './BookForm'\r\nimport  {BookContext}  from '../context'\r\nimport moment from 'moment'\r\nimport firebase from '../firebase'\r\n\r\nfunction EditBooks() {\r\n\r\n    const [text, setText] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [bookCategory, setBookCategory] = useState('')\r\n\r\n    const { selectedBook, categories } = useContext(BookContext)\r\n\r\n\r\n    useEffect(() => {\r\n        if(selectedBook){\r\n        setText(selectedBook.text)\r\n        setAuthor(selectedBook.author)\r\n        setDay(moment(selectedBook.date, 'DD/MM/YYYY'))\r\n        setTime(moment(selectedBook.time, 'hh:mm A'))\r\n        setBookCategory(selectedBook.categoryName)\r\n        }\r\n    }, [selectedBook])\r\n\r\n    useEffect(() =>{\r\n        if(selectedBook){\r\n        firebase\r\n        .firestore()\r\n        .collection('books')\r\n        .doc(selectedBook.id)\r\n        .update({\r\n            text,\r\n            author,\r\n            date : moment(day).format('DD/MM/YYYY'),\r\n            day : moment(day).format('d'),\r\n            time : moment(time).format('hh:mm A'),\r\n            categoryName : bookCategory\r\n        })\r\n    }},[text, author, time, day, bookCategory])\r\n   \r\n    function handleSubmit(e) {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {   selectedBook &&\r\n            <div className='EditBooks'>\r\n            <div className=\"header\">EditBooks</div>\r\n            <div className=\"container\">\r\n                <BookForm\r\n                    handleSubmit={handleSubmit}\r\n\r\n                    text={text}\r\n                    setText={setText}\r\n                    author={author}\r\n                    setAuthor={setAuthor}\r\n                    day={day}\r\n                    setDay={setDay}\r\n                    time={time}\r\n                    setTime={setTime}\r\n                    bookCategory={bookCategory}\r\n                    setBookCategory={setBookCategory}\r\n                    categories={categories}\r\n                    showButtons={false}\r\n\r\n                />\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditBooks","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Modal.js",["115","116"],"import React, { Children, useRef } from \"react\";\r\n\r\nfunction Modal({children, showModal, setShowModal}){\r\n\r\n    const modalRef = useRef()\r\n\r\n    const closeModal = (e) => {\r\n        if(e.target === modalRef.current){\r\n            setShowModal(false)\r\n        }\r\n    }\r\n    return(\r\n        showModal && \r\n        <div className=\"Modal\">\r\n            <div className=\"container\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\BookForm.js",["117","118","119","120"],"import React, { useState } from 'react'\r\nimport Modal from './Modal'\r\nimport { Bell, CalendarDay, Clock, Journals, Palette, X } from 'react-bootstrap-icons'\r\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\nfunction BookForm({\r\n    handleSubmit,\r\n    heading = false,\r\n    text, setText,\r\n    author, setAuthor,\r\n    day, setDay,\r\n    time, setTime,\r\n    bookCategory, setBookCategory,\r\n    categories,\r\n    showButtons = false,\r\n    setShowModal = false\r\n}) {\r\n\r\n    \r\n        const handleKeyDown = (event) => {\r\n          if (event.key === 'Enter') {\r\n            console.log('do validate')\r\n          }\r\n        }\r\n\r\n\r\n    return (\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <form onSubmit={handleSubmit} className=\"BookForm\" onKeyDown={handleKeyDown}>\r\n                <div className=\"text\">\r\n                    {\r\n                        heading &&\r\n                        <h3>{heading}</h3>\r\n                    }\r\n                    <input type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Title\" autoFocus />\r\n                    <input type=\"text\" value={author} onChange={e => setAuthor(e.target.value)} placeholder=\"Author\" />\r\n                </div>\r\n                <div className=\"pick-day\">\r\n                    <div className=\"title\">\r\n                        <CalendarDay />\r\n                    </div>\r\n                    <DatePicker\r\n                        value={day}\r\n                        onChange={day => setDay(day)}\r\n                    disabled\r\n                    />\r\n                </div>\r\n                <div className=\"pick-time\">\r\n                    <div className=\"title\">\r\n                        <Clock />\r\n                    </div>\r\n                    <TimePicker\r\n                        value={time}\r\n                        onChange={time => setTime(time)}\r\n                        disabled\r\n                    />\r\n                </div>\r\n                <div className=\"pick-category\">\r\n                    <div className=\"title\">\r\n                        <Journals />\r\n                        <p>Choose a category</p>\r\n                    </div>\r\n\r\n                    <div className=\"categories\">\r\n                        {\r\n\r\n                            categories.length > 0 ?\r\n                                categories.map(category =>\r\n                                    <div\r\n                                        className={`category ${bookCategory === category.name ? \"active\" : \"\"}`}\r\n                                        onClick={() => setBookCategory(category.name)}\r\n                                        key={category.id}>\r\n                                        {category.name}\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                <div style={{ color: '#ff0000' }}>\r\n                                    Please add a category before proceeding\r\n                                </div>\r\n\r\n\r\n\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                {\r\n                    showButtons &&\r\n                    <div>\r\n                        <div className=\"cancel\" onClick={() => setShowModal(false)} >\r\n                            <X size='40' />\r\n                        </div>\r\n                        <div className=\"confirm\">\r\n                            <button \r\n                            \r\n                            >\r\n                                + Add book\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </form>\r\n        </MuiPickersUtilsProvider>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default BookForm","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Category.js",["121","122"],"import React, { useContext, useState } from 'react'\r\nimport { Pencil, X, XCircle } from 'react-bootstrap-icons'\r\nimport Categories from './Categories'\r\nimport Modal from './Modal'\r\nimport RenameCategory from './RenameCategory'\r\nimport { BookContext } from '../context'\r\nimport firebase from '../firebase'\r\n\r\nfunction Category({ category, edit }) {\r\n    const { defaultCategory, selectedCategory, setSelectedCategory } = useContext(BookContext)\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const deleteCategory = category => {\r\n        firebase\r\n            .firestore()\r\n            .collection('categories')\r\n            .doc(category.id)\r\n            .delete()\r\n            .then(() => {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('books')\r\n                    .where('categoryName', '==', category.name)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        querySnapshot.forEach(doc => {\r\n                            doc.ref.delete()\r\n                        })\r\n                    })\r\n            })\r\n            .then(() => {\r\n                if (selectedCategory === category.name) {\r\n                    setSelectedCategory(defaultCategory)\r\n                }\r\n            })\r\n    }\r\n    return (\r\n        <div className='Category'>\r\n            <div className=\"Project\">\r\n                <div\r\n                    className=\"name\"\r\n                    onClick={() => setSelectedCategory(category.name)}\r\n                >\r\n                    {category.name}\r\n                </div>\r\n                <div className=\"btns\">\r\n                    {edit ?\r\n                        <div className=\"edit-delete\">\r\n                            <span\r\n                                className=\"edit\"\r\n                                onClick={() => setShowModal(true)}\r\n                            >\r\n                                <Pencil size=\"13\" />\r\n                            </span>\r\n                            <span className=\"delete\"\r\n                                onClick={() => deleteCategory(category)}>\r\n                                <XCircle size=\"13\" />\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        category.numOfBooks === 0 ?\r\n                            \"\"\r\n                            :\r\n                            <div className=\"total-books\">\r\n                                {category.numOfBooks}\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <Modal showModal={showModal}>\r\n                <RenameCategory category={category} setShowModal={setShowModal} />\r\n            </Modal>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Category","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\AddNewCategory.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Book.js",["123","124"],"import React, { useContext, useState } from 'react'\r\nimport { ArrowClockwise, CheckCircleFill, Circle, Trash } from 'react-bootstrap-icons'\r\nimport firebase from '../firebase'\r\nimport moment from 'moment'\r\nimport { BookContext } from '../context'\r\n\r\nfunction Book({ book }) {\r\n    const [hover, setHover] = useState(false)\r\n\r\nconst {selectedBook, setSelectedBook} = useContext(BookContext)\r\n\r\nconst handleDelete = book =>{ \r\n    \r\n    deleteBook(book)\r\n    \r\n    if(selectedBook === book){\r\n        setSelectedBook(undefined)\r\n    }\r\n}\r\n\r\nconst deleteBook = book => {\r\n        firebase\r\n            .firestore()\r\n            .collection('books')\r\n            .doc(book.id)\r\n            .delete()\r\n    }\r\n\r\n    const checkBook = book => {\r\n        firebase\r\n            .firestore()\r\n            .collection('books')\r\n            .doc(book.id)\r\n            .update({\r\n                checked: !book.checked\r\n            })\r\n\r\n    }\r\n\r\nconst repeatNextDay = book => {\r\n    const nextDayDate = moment(book.date, 'DD/MM/YYYY').add(1, 'days')\r\n\r\n    const repeatedBook = {\r\n        ...book,\r\n        checked : false,\r\n        date : nextDayDate.format('DD/MM/YYYY'),\r\n        day : nextDayDate.format('d'),\r\n    }\r\n\r\n    delete repeatedBook.id\r\n\r\n    firebase\r\n    .firestore()\r\n    .collection('books')\r\n    .add(repeatedBook)\r\n}\r\n\r\n    return (\r\n        <div className='Book'>\r\n            <div className=\"book-container\"\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}>\r\n                <div className=\"check-book\"\r\n                    onClick={() => checkBook(book)}>\r\n                    {\r\n                        book.checked ?\r\n                            <span className=\"checked\">\r\n                                <CheckCircleFill color=\"#bebebe\" />\r\n                            </span>\r\n                            :\r\n                            <span className=\"unchecked\">\r\n                                <Circle color={book.color} />\r\n\r\n                            </span>\r\n                    }\r\n                </div>\r\n                <div className=\"text\"\r\n                onClick = {() => setSelectedBook(book)}\r\n                >\r\n                    <p style={{ color: book.checked ? '#bebebe' : '#000000' }}>{book.text} <br/>by: {book.author}</p>\r\n                    <span>{book.time} - {book.categoryName}</span>\r\n                    <div className={`line ${book.checked ? 'line-trough' : ''}`}></div>\r\n\r\n                </div>\r\n                {/* <div className=\"add-to-next-day\"\r\n                onClick={ () => repeatNextDay(book)}>\r\n                    {\r\n                        book.checked &&\r\n                        <span>\r\n                            <ArrowClockwise />\r\n                        </span>\r\n                    }\r\n                </div> */}\r\n                <div className=\"delete-book\"\r\n                    onClick={() => handleDelete(book)}>\r\n                    {\r\n                        (hover || book.checked) &&\r\n                        <Trash />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Book","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\hooks\\index.js",["125","126"],"import { onSnapshot } from \"firebase/firestore\";\r\nimport moment from 'moment';\r\nimport { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\nexport function useBooks() {\r\n    const [books, setBooks] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n            .firestore()\r\n            .collection('books')\r\n            .onSnapshot(snapshot => {\r\n                const data = snapshot.docs.map(doc => {\r\n                    return {\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }\r\n                })\r\n                setBooks(data)\r\n            })\r\n\r\n        return () => { unsubscribe() }\r\n    }, [])\r\n\r\n    return books\r\n}\r\n\r\n\r\nexport function useFilterBooks(books, selectedCategory) {\r\n    const [filteredBooks, setFilteredBooks] = useState([])\r\n\r\n    useEffect(() => {\r\n        let data;\r\n        const todayDateFormated = moment().format('DD/MM/YYYY')\r\n\r\n        if (selectedCategory === 'read') {\r\n            data = books.filter(book => book.checked === true)\r\n            console.log(data)\r\n        }else if (selectedCategory == 'unread') {\r\n            data = books.filter(book => book.checked === false)\r\n        } else if (selectedCategory === 'last 7 days') {\r\n            data = books.filter(book => {\r\n                const bookDate = moment(book.date, 'DD/MM/YYYY')\r\n                const todayDate = moment(todayDateFormated, 'DD/MM/YYYY')\r\n\r\n                const diffDays = bookDate.diff(todayDate, 'days')\r\n\r\n                return diffDays <= 0 && diffDays > -7\r\n            })\r\n            console.log(data)\r\n        } else if (selectedCategory === 'all books') {\r\n            data = books\r\n            console.log(data)\r\n        } else {\r\n            data = books.filter(book => book.categoryName === selectedCategory)\r\n            console.log(data)\r\n        }\r\n\r\n        setFilteredBooks(data)\r\n    }, [books, selectedCategory])\r\n\r\n    return filteredBooks\r\n}\r\n\r\nexport function useCategories() {\r\n    const [categories, setCategories] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n            .firestore()\r\n            .collection('categories')\r\n            .onSnapshot(snapshot => {\r\n                const data = snapshot.docs.map(doc => {\r\n\r\n\r\n                    return {\r\n                        id: doc.id,\r\n                        name: doc.data().name\r\n\r\n                    }\r\n\r\n                })\r\n                setCategories(data)\r\n            })\r\n        return () => { unsubscribe() }\r\n    }, [])\r\n\r\n    return categories\r\n}\r\n\r\nexport function useCategoriesWithStats(categories, books) {\r\n    const [categoriesWithStats, setCategoriesWithStats] = useState([])\r\n\r\n    useEffect(() => {\r\n        const data = categories.map((category) => {\r\n            return {\r\n                numOfBooks: books.filter(book => book.categoryName === category.name && !book.checked).length,\r\n                ...category\r\n            }\r\n        })\r\n        setCategoriesWithStats(data)\r\n        console.log(data)\r\n    }, [categories, books])\r\n\r\n    return categoriesWithStats\r\n}","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\firebase\\index.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\constants\\index.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\RenameCategory.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\CategoryForm.js",["127"],"import React from \"react\";\r\n\r\nfunction CategoryForm({ handleSubmit, heading, value, setValue, setShowModal, confirmButtonText }) {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"CategoryForm\">\r\n            <h3>{heading}</h3>\r\n            <input\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Book category...\"\r\n                autoFocus\r\n            />\r\n            <button className=\"cancel\" role=\"button\" onClick={() => setShowModal(false)}>\r\n                cancel\r\n            </button>\r\n            <button className=\"confirm\">\r\n                {confirmButtonText}\r\n            </button>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryForm","C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\Last7Days.js",[],"C:\\Users\\Marek\\Desktop\\Portfolio\\LibraryApp\\src\\components\\SearchBar.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":14},{"ruleId":"132","severity":1,"message":"136","line":2,"column":19,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"137","line":2,"column":38,"nodeType":"134","messageId":"135","endLine":2,"endColumn":45},{"ruleId":"132","severity":1,"message":"138","line":8,"column":22,"nodeType":"134","messageId":"135","endLine":8,"endColumn":33},{"ruleId":"139","severity":1,"message":"140","line":11,"column":21,"nodeType":"141","endLine":11,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":17,"column":17,"nodeType":"144","messageId":"145","endLine":17,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":42,"column":8,"nodeType":"148","endLine":42,"endColumn":47,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"150","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"151","line":7,"column":11,"nodeType":"134","messageId":"135","endLine":7,"endColumn":21},{"ruleId":"132","severity":1,"message":"152","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"153","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":13},{"ruleId":"132","severity":1,"message":"154","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":3,"column":46,"nodeType":"134","messageId":"135","endLine":3,"endColumn":53},{"ruleId":"132","severity":1,"message":"155","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":19},{"ruleId":"132","severity":1,"message":"156","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":18},{"ruleId":"132","severity":1,"message":"157","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"158","line":40,"column":7,"nodeType":"134","messageId":"135","endLine":40,"endColumn":20},{"ruleId":"132","severity":1,"message":"159","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":20},{"ruleId":"142","severity":1,"message":"143","line":40,"column":36,"nodeType":"144","messageId":"145","endLine":40,"endColumn":38},{"ruleId":"160","severity":1,"message":"161","line":15,"column":13,"nodeType":"141","endLine":15,"endColumn":90},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'Journal' is defined but never used.","'Palette' is defined but never used.","'setShowMenu' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedBook'. Either include it or remove the dependency array.","ArrayExpression",["164"],"'Children' is defined but never used.","'closeModal' is assigned a value but never used.","'useState' is defined but never used.","'Modal' is defined but never used.","'Bell' is defined but never used.","'X' is defined but never used.","'Categories' is defined but never used.","'ArrowClockwise' is defined but never used.","'repeatNextDay' is assigned a value but never used.","'onSnapshot' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [text, author, time, day, bookCategory, selectedBook]",{"range":"167","text":"168"},[1296,1335],"[text, author, time, day, bookCategory, selectedBook]"]