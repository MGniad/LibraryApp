{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport moment from 'moment';\nimport { useState, useEffect } from \"react\";\nimport firebase from \"../firebase\";\nexport function useBooks() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    let unsubscribe = firebase.firestore().collection('books').onSnapshot(snapshot => {\n      const data = snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n      setBooks(data);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return books;\n}\n\n_s(useBooks, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\nexport function useFilterBooks(books, selectedCategory) {\n  _s2();\n\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  useEffect(() => {\n    let data;\n    const todayDateFormated = moment().format('DD/MM/YYYY');\n\n    if (selectedCategory === 'read') {\n      data = books.filter(book => book.checked === true);\n      console.log(data);\n    } else if (selectedCategory === 'unread') {\n      data = books.filter(book => book.checked === false);\n    } else if (selectedCategory === 'last 7 days') {\n      data = books.filter(book => {\n        const bookDate = moment(book.date, 'DD/MM/YYYY');\n        const todayDate = moment(todayDateFormated, 'DD/MM/YYYY');\n        const diffDays = bookDate.diff(todayDate, 'days');\n        return diffDays <= 0 && diffDays > -7;\n      });\n      console.log(data);\n    } else if (selectedCategory === 'all books') {\n      data = books;\n      console.log(data);\n    } else {\n      data = books.filter(book => book.categoryName === selectedCategory);\n      console.log(data);\n    }\n\n    setFilteredBooks(data);\n  }, [books, selectedCategory]);\n  return filteredBooks;\n}\n\n_s2(useFilterBooks, \"hvNVZ27hVawvLa0SVIUFTANu+pI=\");\n\nexport function useCategories() {\n  _s3();\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    let unsubscribe = firebase.firestore().collection('categories').onSnapshot(snapshot => {\n      const data = snapshot.docs.map(doc => {\n        return {\n          id: doc.id,\n          name: doc.data().name\n        };\n      });\n      setCategories(data);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return categories;\n}\n\n_s3(useCategories, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n\nexport function useCategoriesWithStats(categories, books) {\n  _s4();\n\n  const [categoriesWithStats, setCategoriesWithStats] = useState([]);\n  useEffect(() => {\n    const data = categories.map(category => {\n      return {\n        numOfBooks: books.filter(book => book.categoryName === category.name && !book.checked).length,\n        ...category\n      };\n    });\n    setCategoriesWithStats(data);\n    console.log(data);\n  }, [categories, books]);\n  return categoriesWithStats;\n}\n\n_s4(useCategoriesWithStats, \"42gjyutKmTrtsBpre2SMCY2o5mA=\");","map":{"version":3,"sources":["C:/Users/marek/Desktop/projekt/LibraryApp/src/hooks/index.js"],"names":["moment","useState","useEffect","firebase","useBooks","books","setBooks","unsubscribe","firestore","collection","onSnapshot","snapshot","data","docs","map","doc","id","useFilterBooks","selectedCategory","filteredBooks","setFilteredBooks","todayDateFormated","format","filter","book","checked","console","log","bookDate","date","todayDate","diffDays","diff","categoryName","useCategories","categories","setCategories","name","useCategoriesWithStats","categoriesWithStats","setCategoriesWithStats","category","numOfBooks","length"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\nexport function useBooks() {\r\n    const [books, setBooks] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n            .firestore()\r\n            .collection('books')\r\n            .onSnapshot(snapshot => {\r\n                const data = snapshot.docs.map(doc => {\r\n                    return {\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }\r\n                })\r\n                setBooks(data)\r\n            })\r\n\r\n        return () => { unsubscribe() }\r\n    }, [])\r\n\r\n    return books\r\n}\r\n\r\n\r\nexport function useFilterBooks(books, selectedCategory) {\r\n    const [filteredBooks, setFilteredBooks] = useState([])\r\n\r\n    useEffect(() => {\r\n        let data;\r\n        const todayDateFormated = moment().format('DD/MM/YYYY')\r\n\r\n        if (selectedCategory === 'read') {\r\n            data = books.filter(book => book.checked === true)\r\n            console.log(data)\r\n        }else if (selectedCategory === 'unread') {\r\n            data = books.filter(book => book.checked === false)\r\n        } else if (selectedCategory === 'last 7 days') {\r\n            data = books.filter(book => {\r\n                const bookDate = moment(book.date, 'DD/MM/YYYY')\r\n                const todayDate = moment(todayDateFormated, 'DD/MM/YYYY')\r\n\r\n                const diffDays = bookDate.diff(todayDate, 'days')\r\n\r\n                return diffDays <= 0 && diffDays > -7\r\n            })\r\n            console.log(data)\r\n        } else if (selectedCategory === 'all books') {\r\n            data = books\r\n            console.log(data)\r\n        } else {\r\n            data = books.filter(book => book.categoryName === selectedCategory)\r\n            console.log(data)\r\n        }\r\n\r\n        setFilteredBooks(data)\r\n    }, [books, selectedCategory])\r\n\r\n    return filteredBooks\r\n}\r\n\r\nexport function useCategories() {\r\n    const [categories, setCategories] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n            .firestore()\r\n            .collection('categories')\r\n            .onSnapshot(snapshot => {\r\n                const data = snapshot.docs.map(doc => {\r\n\r\n\r\n                    return {\r\n                        id: doc.id,\r\n                        name: doc.data().name\r\n\r\n                    }\r\n\r\n                })\r\n                setCategories(data)\r\n            })\r\n        return () => { unsubscribe() }\r\n    }, [])\r\n\r\n    return categories\r\n}\r\n\r\nexport function useCategoriesWithStats(categories, books) {\r\n    const [categoriesWithStats, setCategoriesWithStats] = useState([])\r\n\r\n    useEffect(() => {\r\n        const data = categories.map((category) => {\r\n            return {\r\n                numOfBooks: books.filter(book => book.categoryName === category.name && !book.checked).length,\r\n                ...category\r\n            }\r\n        })\r\n        setCategoriesWithStats(data)\r\n        console.log(data)\r\n    }, [categories, books])\r\n\r\n    return categoriesWithStats\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}