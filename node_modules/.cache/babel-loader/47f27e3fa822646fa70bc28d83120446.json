{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marek\\\\Desktop\\\\projekt\\\\LibraryApp\\\\src\\\\components\\\\RenameCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport CategoryForm from './CategoryForm';\nimport firebase from '../firebase';\nimport { BookContext } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenameCategory({\n  category,\n  setShowModal\n}) {\n  _s();\n\n  const [newCategoryName, setNewCategoryName] = useState(category.name);\n  const {\n    selectedCategory,\n    setSelectedCategory\n  } = useContext(BookContext);\n\n  const renameCategory = (category, newCategoryName) => {\n    const categoryRef = firebase.firestore().collection('categories');\n    const bookRef = firebase.firestore().collection('books');\n    const {\n      name: oldCategoryName\n    } = category;\n    categoryRef.where('name', '==', newCategoryName).get().then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        alert('Category already exists!');\n      } else {\n        categoryRef.doc(category.id).update({\n          name: newProjectName\n        }).then(() => {\n          bookRef.where('categoryName', '==', oldCategoryName).get().then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n              doc.ref.update({\n                categoryName: newCategoryName\n              });\n            });\n          }).then(() => {\n            if (selectedCategory === oldCategoryName) {\n              setSelectedCategory(newCategoryName);\n            }\n          });\n        });\n      }\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    renameCategory(category, newCategoryName);\n    setShowModal(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RenameCategory\",\n    children: /*#__PURE__*/_jsxDEV(CategoryForm, {\n      handleSubmit: handleSubmit,\n      heading: \"New Category\",\n      value: newCategoryName,\n      setValue: setNewCategoryName,\n      setShowModal: setShowModal,\n      confirmButtonText: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenameCategory, \"FrMDcx0q6G5aGT/1NY8jkxljHBI=\");\n\n_c = RenameCategory;\nexport default RenameCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenameCategory\");","map":{"version":3,"sources":["C:/Users/marek/Desktop/projekt/LibraryApp/src/components/RenameCategory.js"],"names":["React","useContext","useState","CategoryForm","firebase","BookContext","RenameCategory","category","setShowModal","newCategoryName","setNewCategoryName","name","selectedCategory","setSelectedCategory","renameCategory","categoryRef","firestore","collection","bookRef","oldCategoryName","where","get","then","querySnapshot","empty","alert","doc","id","update","newProjectName","forEach","ref","categoryName","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAxB,EAAoD;AAAA;;AAChD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAACK,QAAQ,CAACI,IAAV,CAAtD;AACA,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CZ,UAAU,CAACI,WAAD,CAA5D;;AACA,QAAMS,cAAc,GAAG,CAACP,QAAD,EAAWE,eAAX,KAA+B;AAClD,UAAMM,WAAW,GAAGX,QAAQ,CAACY,SAAT,GAAqBC,UAArB,CAAgC,YAAhC,CAApB;AACA,UAAMC,OAAO,GAAGd,QAAQ,CAACY,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAhB;AACA,UAAM;AAAEN,MAAAA,IAAI,EAAEQ;AAAR,QAA4BZ,QAAlC;AAEAQ,IAAAA,WAAW,CACNK,KADL,CACW,MADX,EACmB,IADnB,EACyBX,eADzB,EAEKY,GAFL,GAGKC,IAHL,CAGUC,aAAa,IAAI;AACnB,UAAI,CAACA,aAAa,CAACC,KAAnB,EAA0B;AACtBC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,OAFD,MAEO;AACHV,QAAAA,WAAW,CACNW,GADL,CACSnB,QAAQ,CAACoB,EADlB,EAEKC,MAFL,CAGQ;AACIjB,UAAAA,IAAI,EAAEkB;AADV,SAHR,EAOKP,IAPL,CAOU,MAAM;AACRJ,UAAAA,OAAO,CACFE,KADL,CACW,cADX,EAC2B,IAD3B,EACiCD,eADjC,EAEKE,GAFL,GAGKC,IAHL,CAGUC,aAAa,IAAI;AACnBA,YAAAA,aAAa,CAACO,OAAd,CAAsBJ,GAAG,IAAI;AACzBA,cAAAA,GAAG,CAACK,GAAJ,CAAQH,MAAR,CACI;AACII,gBAAAA,YAAY,EAAEvB;AADlB,eADJ;AAKH,aAND;AAOH,WAXL,EAYKa,IAZL,CAYU,MAAM;AACR,gBAAIV,gBAAgB,KAAKO,eAAzB,EAA0C;AACtCN,cAAAA,mBAAmB,CAACJ,eAAD,CAAnB;AACH;AACJ,WAhBL;AAiBH,SAzBL;AA0BH;AACJ,KAlCL;AAmCH,GAxCD;;AA0CA,WAASwB,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEArB,IAAAA,cAAc,CAACP,QAAD,EAAWE,eAAX,CAAd;AAEAD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BAGI,QAAC,YAAD;AACI,MAAA,YAAY,EAAEyB,YADlB;AAEI,MAAA,OAAO,EAAC,cAFZ;AAGI,MAAA,KAAK,EAAExB,eAHX;AAII,MAAA,QAAQ,EAAEC,kBAJd;AAKI,MAAA,YAAY,EAAEF,YALlB;AAMI,MAAA,iBAAiB,EAAC;AANtB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GApEQF,c;;KAAAA,c;AAsET,eAAeA,cAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport CategoryForm from './CategoryForm'\r\nimport firebase from '../firebase'\r\nimport { BookContext } from '../context'\r\n\r\nfunction RenameCategory({ category, setShowModal }) {\r\n    const [newCategoryName, setNewCategoryName] = useState(category.name)\r\n    const { selectedCategory, setSelectedCategory } = useContext(BookContext)\r\n    const renameCategory = (category, newCategoryName) => {\r\n        const categoryRef = firebase.firestore().collection('categories')\r\n        const bookRef = firebase.firestore().collection('books')\r\n        const { name: oldCategoryName } = category\r\n\r\n        categoryRef\r\n            .where('name', '==', newCategoryName)\r\n            .get()\r\n            .then(querySnapshot => {\r\n                if (!querySnapshot.empty) {\r\n                    alert('Category already exists!')\r\n                } else {\r\n                    categoryRef\r\n                        .doc(category.id)\r\n                        .update(\r\n                            {\r\n                                name: newProjectName\r\n                            }\r\n                        )\r\n                        .then(() => {\r\n                            bookRef\r\n                                .where('categoryName', '==', oldCategoryName)\r\n                                .get()\r\n                                .then(querySnapshot => {\r\n                                    querySnapshot.forEach(doc => {\r\n                                        doc.ref.update(\r\n                                            {\r\n                                                categoryName: newCategoryName\r\n                                            }\r\n                                        )\r\n                                    })\r\n                                })\r\n                                .then(() => {\r\n                                    if (selectedCategory === oldCategoryName) {\r\n                                        setSelectedCategory(newCategoryName)\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        renameCategory(category, newCategoryName)\r\n\r\n        setShowModal(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='RenameCategory'>\r\n\r\n\r\n            <CategoryForm\r\n                handleSubmit={handleSubmit}\r\n                heading='New Category'\r\n                value={newCategoryName}\r\n                setValue={setNewCategoryName}\r\n                setShowModal={setShowModal}\r\n                confirmButtonText='Confirm' />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenameCategory"]},"metadata":{},"sourceType":"module"}